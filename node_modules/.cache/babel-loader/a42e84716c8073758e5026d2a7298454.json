{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/calculator/src/components/wrapper/index.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/button/index';\nimport Input from '../../components/input/index';\nimport './styles.css';\n\nclass Wrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.format = result => {\n      parseFloat(result).toLocaleString(navigator.language, {\n        useGrouping: true,\n        maximumFractionDigits: 6\n      });\n    };\n\n    this.addToInput = val => {\n      if (this.state.flag === 0) {\n        if (this.state.input !== 0) {\n          this.setState({\n            input: this.state.input + \"\" + val\n          });\n        } else {\n          this.setState({\n            input: val\n          });\n        }\n      } else {\n        this.setState({\n          input: val,\n          flag: 0\n        });\n      }\n    };\n\n    this.addZeroToInput = val => {\n      if (this.state.input !== 0) {\n        this.setState({\n          input: this.state.input + \"\" + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      if (this.state.flag === 0) {\n        if (this.state.input === 0) {\n          this.setState({\n            input: \"0.\"\n          });\n        } else if (String(this.state.input).indexOf(\".\") === -1) {\n          this.setState({\n            input: this.state.input + \".\"\n          });\n        }\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: 0,\n        flag: 0\n      });\n    };\n\n    this.toggleSign = () => {\n      const newValue = parseFloat(this.state.input) * -1;\n      this.setState({\n        input: newValue,\n        flag: 0\n      });\n    };\n\n    this.clearLastChar = () => {\n      if (this.state.input.length <= 1 || this.state.input.length === 0) {\n        this.setState({\n          input: 0\n        });\n      } else {\n        this.setState({\n          input: String(this.state.input).substring(0, this.state.input.length - 1)\n        });\n      }\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"plus\",\n        flag: 0\n      });\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"minus\",\n        flag: 0\n      });\n    };\n\n    this.multiply = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"multiply\",\n        flag: 0\n      });\n    };\n\n    this.divide = () => {\n      this.setState({\n        previousNumber: this.state.input,\n        input: \"\",\n        operator: \"divide\",\n        flag: 0\n      });\n    };\n\n    this.inputPercent = () => {\n      const currentValue = parseFloat(this.state.input);\n      if (currentValue === 0) return;\n      const newValue = parseFloat(currentValue) / 100;\n      this.setState({\n        input: newValue\n      });\n    };\n\n    this.handleKeyDown = event => {\n      let {\n        key\n      } = event;\n\n      if (/\\d/.test(key)) {\n        if (key === 0) {\n          event.preventDefault();\n          this.addZeroToInput(parseInt(key, 10));\n        } else {\n          event.preventDefault();\n          this.addToInput(parseInt(key, 10));\n        }\n      } else if (key === '*') {\n        event.preventDefault();\n        this.multiply();\n      } else if (key === '/') {\n        event.preventDefault();\n        this.divide();\n      } else if (key === '+') {\n        event.preventDefault();\n        this.add();\n      } else if (key === '-') {\n        event.preventDefault();\n        this.subtract();\n      } else if (key === '.') {\n        event.preventDefault();\n        this.addDecimal();\n      } else if (key === '%') {\n        event.preventDefault();\n        this.inputPercent();\n      } else if (key === 'Backspace') {\n        event.preventDefault();\n        this.clearLastChar();\n      } else if (key === 'c') {\n        event.preventDefault();\n        this.clearInput();\n      } else if (key === 'Enter') {\n        event.preventDefault();\n        this.evaluate();\n      }\n    };\n\n    this.evaluate = () => {\n      //usar callback\n      const newValue = parseFloat(this.state.input);\n\n      if (this.state.flag === 0) {\n        this.setState({\n          currentNumber: newValue,\n          flag: 1\n        }, () => {\n          console.log(this.state.currentNumber);\n          console.log(this.state.flag);\n\n          if (this.state.operator === \"plus\") {\n            this.setState({\n              input: parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber)\n            });\n          }\n\n          if (this.state.operator === \"minus\") {\n            this.setState({\n              input: parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber)\n            });\n          }\n\n          if (this.state.operator === \"divide\") {\n            this.setState({\n              input: parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber)\n            });\n          }\n\n          if (this.state.operator === \"multiply\") {\n            this.setState({\n              input: parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber)\n            });\n          }\n        });\n      } else if (this.state.flag === 1) {\n        this.setState({\n          flag: 1\n        }, () => {\n          if (this.state.operator === \"plus\") {\n            this.setState({\n              input: parseFloat(this.state.input) + parseFloat(this.state.currentNumber)\n            });\n          }\n\n          if (this.state.operator === \"minus\") {\n            this.setState({\n              input: format(parseFloat(this.state.input) - parseFloat(this.state.currentNumber))\n            });\n          }\n\n          if (this.state.operator === \"divide\") {\n            this.setState({\n              input: parseFloat(this.state.input) / parseFloat(this.state.currentNumber)\n            });\n          }\n\n          if (this.state.operator === \"multiply\") {\n            this.setState({\n              input: parseFloat(this.state.input) * parseFloat(this.state.currentNumber)\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      input: 0,\n      previousNumber: 0,\n      currentNumber: 0,\n      operator: 0,\n      flag: 0\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    //const clearDisplay = this.state.input !== 0\n    //const clearText = clearDisplay ? 'C' : 'AC'\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, \"C\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.toggleSign,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, \"+/-\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.inputPercent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, \"%\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.clearLastChar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, \"\\u2190\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.evaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, \"=\")));\n  }\n\n}\n\nexport default Wrapper;","map":{"version":3,"sources":["/Users/Raila/calculator/src/components/wrapper/index.js"],"names":["React","Component","Button","Input","Wrapper","constructor","props","format","result","parseFloat","toLocaleString","navigator","language","useGrouping","maximumFractionDigits","addToInput","val","state","flag","input","setState","addZeroToInput","addDecimal","String","indexOf","clearInput","toggleSign","newValue","clearLastChar","length","substring","add","previousNumber","operator","subtract","multiply","divide","inputPercent","currentValue","handleKeyDown","event","key","test","preventDefault","parseInt","evaluate","currentNumber","console","log","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '../../components/button/index'\nimport Input from '../../components/input/index'\nimport'./styles.css'\n\nclass Wrapper extends Component{\n    constructor(props){\n        super(props);\n    \n        this.state={\n        input:0,\n        previousNumber:0,\n        currentNumber:0,\n        operator: 0,\n        flag:0\n        };\n        \n    }\n\n    format=( result)=>{\n        parseFloat(result).toLocaleString(navigator.language , {\n            useGrouping: true,\n            maximumFractionDigits: 6\n          })\n    }\n \n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n      componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown)\n      }\n    addToInput = val =>{\n\n        if(this.state.flag===0){\n            if(this.state.input !==0){\n                this.setState({input: this.state.input +\"\"+val});\n            }else{\n                this.setState({input: val});\n            }\n        }else{\n            this.setState({\n                input: val,\n                flag:0\n            });\n        \n        }\n        \n    };\n\n    addZeroToInput = val =>{\n        if(this.state.input !==0){\n            this.setState({input:this.state.input +\"\"+val});\n\n        }\n    }\n\n    addDecimal = val =>{\n        if(this.state.flag===0){\n            if(this.state.input ===0){\n                this.setState({input:\"0.\"});\n            }\n        \n            else if(String(this.state.input).indexOf(\".\")===-1){\n        \n                this.setState({input:this.state.input +\".\"});\n            }\n        }\n    }\n    clearInput =() =>{\n\n            this.setState({\n                input:0,\n                flag:0\n            \n            });\n        \n\n    }\n\n    toggleSign =() => {\n   \n        const newValue = parseFloat(this.state.input) * -1;\n        \n        this.setState({\n         input: newValue,\n         flag:0\n        })\n    }\n    clearLastChar = () =>{\n        if (this.state.input.length <=1 ||this.state.input.length===0){\n            this.setState({input:0});\n        }else{\n        this.setState({input:String(this.state.input).substring(0, this.state.input.length - 1)});\n        }\n    }\n    add=() =>{\n    \n        this.setState({\n            previousNumber:this.state.input,\n            input:\"\",\n            operator:\"plus\",\n            flag:0\n        });\n      \n    }\n\n    subtract=() =>{\n        this.setState({previousNumber:this.state.input,\n            input:\"\",\n            operator:\"minus\",\n            flag:0\n        });\n\n    }\n\n    multiply=() =>{\n        this.setState({previousNumber:this.state.input,\n            input:\"\",\n            operator:\"multiply\",\n            flag:0\n        });\n    }\n\n    divide=() =>{\n        this.setState({previousNumber:this.state.input,\n            input:\"\",\n            operator:\"divide\",\n            flag:0\n        });\n    }\n\n    inputPercent =() =>{\n        const currentValue = parseFloat(this.state.input)\n        if (currentValue === 0)\n          return\n        const newValue = parseFloat(currentValue) / 100\n        \n        this.setState({\n         input: newValue\n        })\n    }\n\n    handleKeyDown = (event) => {\n        let { key } = event\n    \n        \n        if ((/\\d/).test(key)) {\n            if(key===0){\n                event.preventDefault()\n                this.addZeroToInput(parseInt(key, 10))\n\n            }else{\n                event.preventDefault()\n                this.addToInput(parseInt(key, 10))\n            }\n\n\n        }else if (key==='*') {\n            event.preventDefault()\n            this.multiply() \n        }\n        else if(key==='/'){\n            event.preventDefault()\n            this.divide() \n        }\n        else if (key==='+') {\n            event.preventDefault()\n            this.add() \n        }   \n        else if (key==='-') {\n            event.preventDefault()\n            this.subtract() \n        }   \n        else if (key ==='.') {\n          event.preventDefault()\n          this.addDecimal()\n        } else if (key === '%') {\n          event.preventDefault()\n          this.inputPercent()\n        } else if (key === 'Backspace') {\n          event.preventDefault()\n          this.clearLastChar()\n        } else if (key === 'c') {\n          event.preventDefault()\n          this.clearInput()\n        }\n        else if (key === 'Enter'){\n            event.preventDefault()\n            this.evaluate()\n        }\n      };\n\n\n    evaluate =() =>{\n        //usar callback\n\n        const newValue = parseFloat(this.state.input)\n       \n        if (this.state.flag===0){\n\n            this.setState({\n                currentNumber:newValue,\n                flag:1\n            },()=>{ \n                console.log(this.state.currentNumber);\n                console.log(this.state.flag)\n            \n                \n            \n                if (this.state.operator ===\"plus\"){\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.previousNumber)+parseFloat(this.state.currentNumber)\n                \n                        }\n\n                    );\n                }\n\n                if (this.state.operator ===\"minus\"){\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.previousNumber)-parseFloat(this.state.currentNumber)\n                        }\n                    );\n                }\n\n                if (this.state.operator ===\"divide\"){\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.previousNumber)/parseFloat(this.state.currentNumber)\n                        }\n                    );\n                }\n\n                if (this.state.operator ===\"multiply\"){\n\n\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.previousNumber)*parseFloat(this.state.currentNumber)\n                        }\n                    );\n                }\n\n            \n\n            });\n\n        } else if (this.state.flag===1){\n            this.setState({\n                flag:1\n            },()=>{ \n                if (this.state.operator ===\"plus\"){\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.input)+parseFloat(this.state.currentNumber)\n                        }\n\n                    );\n                }\n\n                if (this.state.operator ===\"minus\"){\n                    this.setState(\n                        {\n                            input:format(parseFloat(this.state.input)-parseFloat(this.state.currentNumber))\n                        }\n                    );\n                }\n\n                if (this.state.operator ===\"divide\"){\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.input)/parseFloat(this.state.currentNumber)\n                        }\n                    );\n                }\n\n                if (this.state.operator ===\"multiply\"){\n\n\n                    this.setState(\n                        {\n                            input:parseFloat(this.state.input)*parseFloat(this.state.currentNumber)\n                        }\n                    );\n                }\n\n            }\n            );\n\n\n        }\n\n    }\n    render(){\n        //const clearDisplay = this.state.input !== 0\n        //const clearText = clearDisplay ? 'C' : 'AC'\n\n        return(\n            <div className=\"calc-wrapper\">\n                <div className=\"row\">\n                    <Input>{this.state.input}</Input>\n\n                </div>\n                <div className=\"row\">\n                <Button handleClick={this.clearInput}>C</Button>\n                <Button handleClick={this.toggleSign}>+/-</Button>\n                <Button handleClick={this.inputPercent}>%</Button>\n                <Button handleClick={this.divide}>/</Button>   \n                </div>\n\n                <div className=\"row\">\n                <Button handleClick={this.addToInput}>7</Button>\n                <Button handleClick={this.addToInput}>8</Button>\n                <Button handleClick={this.addToInput}>9</Button>\n                <Button handleClick={this.multiply}>*</Button>\n                \n                </div>\n\n                <div className=\"row\">\n                <Button handleClick={this.addToInput}>4</Button>\n                <Button handleClick={this.addToInput}>5</Button>\n                <Button handleClick={this.addToInput}>6</Button>\n                <Button handleClick={this.add}>+</Button>\n                \n                </div>\n            \n                <div className=\"row\">\n                <Button handleClick={this.addToInput}>1</Button>\n                <Button handleClick={this.addToInput}>2</Button>\n                <Button handleClick={this.addToInput}>3</Button>\n                <Button handleClick={this.subtract}>-</Button>\n                </div>\n\n                <div className=\"row\">\n                <Button handleClick={this.addDecimal}>.</Button>\n                <Button handleClick={this.addZeroToInput}>0</Button>\n                <Button handleClick={this.clearLastChar}>&larr;</Button>\n                <Button handleClick={this.evaluate}>=</Button>\n                \n                </div>\n\n           \n\n            </div>\n     \n        );\n\n\n\n    }\n\n}\n\nexport default Wrapper;"]},"metadata":{},"sourceType":"module"}