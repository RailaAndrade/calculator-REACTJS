{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/calculator/src/components/input/index.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\n\nclass Input extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scale: 1\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      scale\n    } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({\n        scale: actualScale\n      });\n    } else if (scale < 1) {\n      this.setState({\n        scale: 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      scale\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto-scaling-text\",\n      style: {\n        transform: `scale(${scale},${scale})`\n      },\n      ref: node => this.node = node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, this.props.children !== \"\" ? this.props.toLocaleString('en-US', {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }).childrenreplace(/,/g, '') : \"\"));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/Raila/calculator/src/components/input/index.js"],"names":["React","Component","Input","state","scale","componentDidUpdate","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","render","transform","props","children","toLocaleString","useGrouping","maximumFractionDigits","childrenreplace"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA6B;AAAA;AAAA;AAAA,SACzBE,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE;AADH,KADiB;AAAA;;AAIzBC,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,UAAMG,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMC,UAAU,GAAGD,IAAI,CAACC,UAAxB;AAEA,UAAMC,cAAc,GAAGD,UAAU,CAACE,WAAlC;AACA,UAAMC,WAAW,GAAGJ,IAAI,CAACG,WAAzB;AACA,UAAME,WAAW,GAAGH,cAAc,GAAGE,WAArC;AAEA,QAAIN,KAAK,KAAKO,WAAd,EACE;;AAEF,QAAIA,WAAW,GAAG,CAAlB,EAAqB;AACnB,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KAFD,MAEO,IAAIP,KAAK,GAAG,CAAZ,EAAe;AACpB,WAAKQ,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;AACF;;AAGHS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBAGI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAG,SAAQV,KAAM,IAAGA,KAAM;AAArC,OAA1C;AAAsF,MAAA,GAAG,EAAEE,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKS,KAAL,CAAWC,QAAX,KAAsB,EAAtB,GAA2B,KAAKD,KAAL,CAAWE,cAAX,CAA0B,OAA1B,EAAoC;AAC3DC,MAAAA,WAAW,EAAE,IAD8C;AAE3DC,MAAAA,qBAAqB,EAAE;AAFoC,KAApC,EAGxBC,eAHwB,CAGR,IAHQ,EAGH,EAHG,CAA3B,GAG4B,EALpC,CADJ,CAHJ;AAoBH;;AA/CwB;;AAoD7B,eAAelB,KAAf","sourcesContent":["import React ,{Component} from 'react';\nimport './styles.css';\n\nclass Input extends Component{\n    state = {\n        scale: 1\n    };\n    componentDidUpdate() {\n        const { scale } = this.state\n        \n        const node = this.node\n        const parentNode = node.parentNode\n        \n        const availableWidth = parentNode.offsetWidth\n        const actualWidth = node.offsetWidth\n        const actualScale = availableWidth / actualWidth\n        \n        if (scale === actualScale)\n          return\n        \n        if (actualScale < 1) {\n          this.setState({ scale: actualScale })\n        } else if (scale < 1) {\n          this.setState({ scale: 1 })\n        }\n      }\n      \n\n    render(){\n        const { scale } = this.state\n        return(\n            \n\n            <div className=\"input\" >\n                <div className=\"auto-scaling-text\" style={{ transform: `scale(${scale},${scale})` }}  ref={node => this.node = node}>\n                    {   \n                        this.props.children!==\"\"?  this.props.toLocaleString('en-US' , {\n                            useGrouping: true,\n                            maximumFractionDigits: 6\n                        }).childrenreplace(/,/g,''):\"\"\n                        \n                    }\n                    \n    \n                </div>\n                \n            </div>\n        );\n\n\n    }\n\n\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}