{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/calculator/src/components/input/index.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\n\nclass Input extends Component {\n  componentDidUpdate() {\n    const {\n      scale\n    } = this.state;\n    const node = this.node;\n    const parentNode = node.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({\n        scale: actualScale\n      });\n    } else if (scale < 1) {\n      this.setState({\n        scale: 1\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, this.props.children !== \"\" ? this.props.children.toLocaleString('en-US', {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }) : \"\" //Math.round(this.props.children * 100)/100\n    );\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/Raila/calculator/src/components/input/index.js"],"names":["React","Component","Input","componentDidUpdate","scale","state","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","render","props","children","toLocaleString","useGrouping","maximumFractionDigits"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA6B;AAEzBE,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,UAAMC,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMC,UAAU,GAAGD,IAAI,CAACC,UAAxB;AAEA,UAAMC,cAAc,GAAGD,UAAU,CAACE,WAAlC;AACA,UAAMC,WAAW,GAAGJ,IAAI,CAACG,WAAzB;AACA,UAAME,WAAW,GAAGH,cAAc,GAAGE,WAArC;AAEA,QAAIN,KAAK,KAAKO,WAAd,EACE;;AAEF,QAAIA,WAAW,GAAG,CAAlB,EAAqB;AACnB,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KAFD,MAEO,IAAIP,KAAK,GAAG,CAAZ,EAAe;AACpB,WAAKQ,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;AACF;;AAGHS,EAAAA,MAAM,GAAE;AACJ,wBAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQ,KAAKC,KAAL,CAAWC,QAAX,KAAsB,EAAtB,GAA2B,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,cAApB,CAAmC,OAAnC,EAA6C;AACpEC,MAAAA,WAAW,EAAE,IADuD;AAEpEC,MAAAA,qBAAqB,EAAE;AAF6C,KAA7C,CAA3B,GAGG,EANX,CAaI;AAbJ,KAFJ;AAwBH;;AAhDwB;;AAqD7B,eAAehB,KAAf","sourcesContent":["import React ,{Component} from 'react';\nimport './styles.css';\n\nclass Input extends Component{\n\n    componentDidUpdate() {\n        const { scale } = this.state\n        \n        const node = this.node\n        const parentNode = node.parentNode\n        \n        const availableWidth = parentNode.offsetWidth\n        const actualWidth = node.offsetWidth\n        const actualScale = availableWidth / actualWidth\n        \n        if (scale === actualScale)\n          return\n        \n        if (actualScale < 1) {\n          this.setState({ scale: actualScale })\n        } else if (scale < 1) {\n          this.setState({ scale: 1 })\n        }\n      }\n      \n\n    render(){\n        return(\n\n            <div className=\"input\">\n             \n                {   \n                    this.props.children!==\"\"?  this.props.children.toLocaleString('en-US' , {\n                        useGrouping: true,\n                        maximumFractionDigits: 6\n                    }):\"\"\n                    \n\n                    \n                \n                   \n                \n                //Math.round(this.props.children * 100)/100\n                \n                \n     \n                }\n            </div>\n        );\n\n\n    }\n\n\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}