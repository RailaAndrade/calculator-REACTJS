{"ast":null,"code":"var _jsxFileName = \"/Users/Raila/calculator/src/components/wrapper/index.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/button/index';\nimport Input from '../../components/input/index';\nimport './styles.css';\n\nclass Wrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      if (this.state.input !== 0) {\n        this.setState({\n          input: this.state.input + \"\" + val\n        });\n      } else {\n        this.setState({\n          input: val\n        });\n      }\n    };\n\n    this.addZeroToInput = val => {\n      if (this.state.input !== 0) {\n        this.setState({\n          input: this.state.input + \"\" + val\n        });\n      }\n    };\n\n    this.addDecimal = val => {\n      console.log(this.state.input);\n\n      if (this.state.input === 0) {\n        this.setState({\n          input: \"0.\"\n        });\n      } else if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: 0\n      });\n    };\n\n    this.toggleSign = () => {\n      const newValue = parseFloat(this.state.input) * -1;\n      this.setState({\n        input: newValue\n      });\n    };\n\n    this.clearLastChar = () => {\n      if (this.state.input.length <= 1 || this.state.input.length === 0) {\n        this.setState({\n          input: 0\n        });\n      } else {\n        this.setState({\n          input: this.state.input.substring(0, this.state.input.length - 1)\n        });\n      }\n    };\n\n    this.add = () => {\n      this.setState({\n        previousNumber: this.state.input\n      });\n      this.setState({\n        input: \"\"\n      });\n      this.setState({\n        operator: \"plus\"\n      });\n    };\n\n    this.subtract = () => {\n      this.setState({\n        previousNumber: this.state.input\n      });\n      this.setState({\n        input: \"\"\n      });\n      this.setState({\n        operator: \"minus\"\n      });\n    };\n\n    this.multiply = () => {\n      this.setState({\n        previousNumber: this.state.input\n      });\n      this.setState({\n        input: \"\"\n      });\n      this.setState({\n        operator: \"multiply\"\n      });\n    };\n\n    this.divide = () => {\n      this.setState({\n        previousNumber: this.state.input\n      });\n      this.setState({\n        input: \"\"\n      });\n      this.setState({\n        operator: \"divide\"\n      });\n    };\n\n    this.inputPercent = () => {\n      const currentValue = parseFloat(this.state.input);\n      if (currentValue === 0) return;\n      const newValue = parseFloat(currentValue) / 100;\n      this.setState({\n        input: newValue\n      });\n    };\n\n    this.handleKeyDown = event => {\n      let {\n        key\n      } = event;\n\n      if (/\\d/.test(key)) {\n        if (key === 0) {\n          event.preventDefault();\n          this.addZeroToInput(parseInt(key, 10));\n        } else {\n          event.preventDefault();\n          this.addToInput(parseInt(key, 10));\n        }\n      } else if (key === '*') {\n        event.preventDefault();\n        this.multiply();\n      } else if (key === '/') {\n        event.preventDefault();\n        this.divide();\n      } else if (key === '+') {\n        event.preventDefault();\n        this.add();\n      } else if (key === '-') {\n        event.preventDefault();\n        this.subtract();\n      } else if (key === '.') {\n        event.preventDefault();\n        this.addDecimal();\n      } else if (key === '%') {\n        event.preventDefault();\n        this.inputPercent();\n      } else if (key === 'Backspace') {\n        event.preventDefault();\n        this.clearLastChar();\n      } else if (key === 'c') {\n        event.preventDefault();\n\n        if (this.state.input !== '0') {//this.clearLastChar()\n        } else {\n          this.clearAll();\n        }\n      } else if (key === 'Enter') {\n        event.preventDefault();\n        this.evaluate();\n      }\n    };\n\n    this.evaluate = () => {\n      //usar callback\n      const newValue = parseFloat(this.state.input);\n      this.setState({\n        currentNumber: newValue\n      }, () => {\n        console.log(this.state.currentNumber);\n\n        if (this.state.operator === \"plus\") {\n          this.setState({\n            input: parseFloat(this.state.previousNumber) + parseFloat(this.state.currentNumber)\n          });\n        }\n\n        if (this.state.operator === \"minus\") {\n          this.setState({\n            input: parseFloat(this.state.previousNumber) - parseFloat(this.state.currentNumber)\n          });\n        }\n\n        if (this.state.operator === \"divide\") {\n          this.setState({\n            input: parseFloat(this.state.previousNumber) / parseFloat(this.state.currentNumber)\n          });\n        }\n\n        if (this.state.operator === \"multiply\") {\n          this.setState({\n            input: parseFloat(this.state.previousNumber) * parseFloat(this.state.currentNumber)\n          });\n        }\n      });\n    };\n\n    this.state = {\n      input: 0,\n      previousNumber: 0,\n      currentNumber: 0,\n      operator: 0\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calc-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \"C\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.toggleSign,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \"+/-\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.inputPercent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \"%\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.clearLastChar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, \"\\u2190\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.evaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, \"=\")));\n  }\n\n}\n\nexport default Wrapper;","map":{"version":3,"sources":["/Users/Raila/calculator/src/components/wrapper/index.js"],"names":["React","Component","Button","Input","Wrapper","constructor","props","addToInput","val","state","input","setState","addZeroToInput","addDecimal","console","log","indexOf","clearInput","toggleSign","newValue","parseFloat","clearLastChar","length","substring","add","previousNumber","operator","subtract","multiply","divide","inputPercent","currentValue","handleKeyDown","event","key","test","preventDefault","parseInt","clearAll","evaluate","currentNumber","componentWillMount","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '../../components/button/index'\nimport Input from '../../components/input/index'\nimport'./styles.css'\n\nclass Wrapper extends Component{\n    constructor(props){\n        super(props);\n    \n        this.state={\n        input:0,\n        previousNumber:0,\n        currentNumber:0,\n        operator: 0\n        };\n        \n    }\n\n    componentWillMount(){\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n      componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown)\n      }\n    addToInput = val =>{\n        if(this.state.input !==0){\n            this.setState({input: this.state.input +\"\"+val});\n        }else{\n            this.setState({input: val});\n        }\n\n        \n    };\n\n    addZeroToInput = val =>{\n        if(this.state.input !==0){\n            this.setState({input:this.state.input +\"\"+val});\n\n        }\n    }\n\n    addDecimal = val =>{\n        console.log(this.state.input);\n        if(this.state.input ===0){\n            this.setState({input:\"0.\"});\n        }\n       \n        else if(this.state.input.indexOf(\".\")===-1){\n    \n            this.setState({input:this.state.input + val});\n        }\n    }\n    clearInput =() =>{\n        this.setState({input:0});\n\n    }\n\n    toggleSign =() => {\n   \n        const newValue = parseFloat(this.state.input) * -1;\n        \n        this.setState({\n         input: newValue\n        })\n    }\n    clearLastChar = () =>{\n        if (this.state.input.length <=1 ||this.state.input.length===0){\n            this.setState({input:0});\n        }else{\n        this.setState({input:this.state.input.substring(0, this.state.input.length - 1)});\n        }\n    }\n    add=() =>{\n        this.setState({previousNumber:this.state.input});\n        this.setState({input:\"\"});\n        this.setState({operator:\"plus\"});\n      \n    }\n\n    subtract=() =>{\n        this.setState({previousNumber:this.state.input});\n        this.setState({input:\"\"});\n        this.setState({operator:\"minus\"})\n    }\n\n    multiply=() =>{\n        this.setState({previousNumber:this.state.input});\n        this.setState({input:\"\"});\n        this.setState({operator:\"multiply\"})\n    }\n\n    divide=() =>{\n        this.setState({previousNumber:this.state.input});\n        this.setState({input:\"\"});\n        this.setState({operator:\"divide\"})\n    }\n\n    inputPercent =() =>{\n        const currentValue = parseFloat(this.state.input)\n        \n        if (currentValue === 0)\n          return\n        const newValue = parseFloat(currentValue) / 100\n        \n        this.setState({\n         input: newValue\n        })\n    }\n\n    handleKeyDown = (event) => {\n        let { key } = event\n    \n        \n        if ((/\\d/).test(key)) {\n            if(key===0){\n                event.preventDefault()\n                this.addZeroToInput(parseInt(key, 10))\n\n            }else{\n                event.preventDefault()\n                this.addToInput(parseInt(key, 10))\n            }\n\n\n        }else if (key==='*') {\n            event.preventDefault()\n            this.multiply() \n        }\n        else if(key==='/'){\n            event.preventDefault()\n            this.divide() \n        }\n        else if (key==='+') {\n            event.preventDefault()\n            this.add() \n        }   \n        else if (key==='-') {\n            event.preventDefault()\n            this.subtract() \n        }   \n        else if (key ==='.') {\n          event.preventDefault()\n          this.addDecimal()\n        } else if (key === '%') {\n          event.preventDefault()\n          this.inputPercent()\n        } else if (key === 'Backspace') {\n          event.preventDefault()\n          this.clearLastChar()\n        } else if (key === 'c') {\n          event.preventDefault()\n          \n          if (this.state.input !== '0') {\n            //this.clearLastChar()\n          } else {\n            this.clearAll()\n          }\n        }\n        else if (key === 'Enter'){\n            event.preventDefault()\n            this.evaluate()\n        }\n        \n      };\n\n\n    evaluate =() =>{\n        //usar callback\n\n        const newValue = parseFloat(this.state.input)\n       \n        \n        this.setState({currentNumber:newValue},()=>{ \n            console.log(this.state.currentNumber);\n       \n        \n       \n        if (this.state.operator ===\"plus\"){\n            this.setState(\n                {\n                    input:parseFloat(this.state.previousNumber)+parseFloat(this.state.currentNumber)\n                }\n            );\n        }\n\n        if (this.state.operator ===\"minus\"){\n            this.setState(\n                {\n                    input:parseFloat(this.state.previousNumber)-parseFloat(this.state.currentNumber)\n                }\n            );\n        }\n\n        if (this.state.operator ===\"divide\"){\n            this.setState(\n                {\n                    input:parseFloat(this.state.previousNumber)/parseFloat(this.state.currentNumber)\n                }\n            );\n        }\n\n        if (this.state.operator ===\"multiply\"){\n\n\n            this.setState(\n                {\n                    input:parseFloat(this.state.previousNumber)*parseFloat(this.state.currentNumber)\n                }\n            );\n        }\n    });\n\n    }\n    render(){\n\n        return(\n            <div className=\"calc-wrapper\">\n                <div className=\"row\">\n                    <Input>{this.state.input}</Input>\n\n                </div>\n                <div className=\"row\">\n                <Button handleClick={this.clearInput}>C</Button>\n                <Button handleClick={this.toggleSign}>+/-</Button>\n                <Button handleClick={this.inputPercent}>%</Button>\n                <Button handleClick={this.divide}>/</Button>   \n                </div>\n\n                <div className=\"row\">\n                <Button handleClick={this.addToInput}>7</Button>\n                <Button handleClick={this.addToInput}>8</Button>\n                <Button handleClick={this.addToInput}>9</Button>\n                <Button handleClick={this.multiply}>*</Button>\n                \n                </div>\n\n                <div className=\"row\">\n                <Button handleClick={this.addToInput}>4</Button>\n                <Button handleClick={this.addToInput}>5</Button>\n                <Button handleClick={this.addToInput}>6</Button>\n                <Button handleClick={this.add}>+</Button>\n                \n                </div>\n            \n                <div className=\"row\">\n                <Button handleClick={this.addToInput}>1</Button>\n                <Button handleClick={this.addToInput}>2</Button>\n                <Button handleClick={this.addToInput}>3</Button>\n                <Button handleClick={this.subtract}>-</Button>\n                </div>\n\n                <div className=\"row\">\n                <Button handleClick={this.addDecimal}>.</Button>\n                <Button handleClick={this.addZeroToInput}>0</Button>\n                <Button handleClick={this.clearLastChar}>&larr;</Button>\n                <Button handleClick={this.evaluate}>=</Button>\n                \n                </div>\n\n           \n\n            </div>\n     \n        );\n\n\n\n    }\n\n}\n\nexport default Wrapper;"]},"metadata":{},"sourceType":"module"}